{"version":3,"file":"static/js/26.774ad7d2.chunk.js","mappings":"oOACA,EAAuB,2BAAvB,EAA0D,4B,qCCQ7CA,EAAe,WAC1B,IAAMC,GAAaC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,UAAf,IAE9BI,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WACW,aAAfb,GACFc,IAAAA,OAAAA,QAAwB,+CAE3B,GAAE,CAACd,KAEJa,EAAAA,EAAAA,YAAU,WACT,OAAO,kBAAMT,GAASW,EAAAA,EAAAA,KAAf,CACP,GAAE,CAACX,IAEJ,IAAMY,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MAEd,OAAQZ,GACN,IAAK,OACDC,EAAQW,GACR,MACJ,IAAK,QACDT,EAASS,GACT,MACJ,IAAK,WACDP,EAAYO,GACZ,MACJ,QACI,OAEP,EAWD,OACE,0BACE,kBAAOC,SAXU,SAAAC,GAEnB,GADAA,EAAEC,iBACW,KAATf,GAAyB,KAAVE,GAA6B,KAAbE,EACjC,OAAOY,MAAM,oKAEfC,QAAQC,IAAI,CAAElB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IAC3BP,EAASsB,EAAAA,GAAAA,SAA4B,CAAEnB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IACrD,EAIkCgB,UAAWC,EAA1C,WACE,mBAAOD,UAAWC,EAAlB,sBAEE,kBACEC,KAAK,OACLtB,KAAK,OACLuB,QAAQ,yHACRC,MAAM,yIACNZ,MAAOZ,EACPyB,SAAUhB,EACViB,UAAQ,QAEZ,mBAAON,UAAWC,EAAlB,mBAEE,kBACEC,KAAK,QACLtB,KAAK,QACLuB,QAAQ,0CACRX,MAAOV,EACPuB,SAAUhB,EACViB,UAAQ,QAGZ,mBAAON,UAAWC,EAAlB,sBAEE,kBACEC,KAAK,WACLtB,KAAK,WACLY,MAAOR,EACPqB,SAAUhB,EACViB,UAAQ,QAGZ,mBAASJ,KAAK,SAASK,QAAQ,UAA/B,0BAIP,ECnFD,EARiB,WACf,OACE,0BACA,SAACnC,EAAD,KAGH,C,0DCNYgB,GAAgBoB,E,QAAAA,IAAa,2B","sources":["webpack://goit-react-hw-08-phonebook/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx","redux/actions/contactsActions.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"label\":\"RegisterForm_label__4pTXF\"};","//import { Button } from '@mui/material';\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport userAuthOperations from 'redux/Auth/operations';\nimport css from './RegisterForm.module.css'\nimport Notiflix from 'notiflix';\nimport { setAuthStatus } from 'redux/actions/contactsActions';\n\n\nexport const RegisterForm = () => {\n  const authStatus = useSelector(state => state.auth.authStatus);\n\n  const dispatch = useDispatch();\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  useEffect(() => {\n    if (authStatus === 'RegError') {\n      Notiflix.Notify.failure('Error: incorrectly entered email or password');\n    }\n  }, [authStatus]);\n\n  useEffect(() => {\n   return () => dispatch(setAuthStatus());\n  }, [dispatch]);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    \n    switch (name) {\n      case 'name':\n          setName(value);\n          break;\n      case 'email':\n          setEmail(value);\n          break;\n      case 'password':\n          setPassword(value);\n          break;\n      default:\n          return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name === '' || email === '' || password === '') {\n      return alert('Все поля должны быть заполнены');\n    }\n    console.log({ name, email, password });\n    dispatch(userAuthOperations.register({ name, email, password }));\n  }\n\n  return (\n    <div>\n      <form  onSubmit={handleSubmit} className={css.form}>\n        <label className={css.label}>\n          Username\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n            onChange={handleChange}\n            required/>\n        </label>\n        <label className={css.label}>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\" \n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n            value={email}\n            onChange={handleChange}\n            required\n            />\n        </label>\n        <label className={css.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\" \n            value={password}\n            onChange={handleChange}\n            required\n            />\n        </label>\n        <button  type=\"submit\" variant=\"primary\">Register</button>\n        </form>\n    </div>\n  )\n}\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n    <RegisterForm />\n  </div>\n  )\n}\n\nexport default Register;","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const setAuthStatus = createAction('authStatus/setAuthStatus')"],"names":["RegisterForm","authStatus","useSelector","state","auth","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","useEffect","Notiflix","setAuthStatus","handleChange","event","target","value","onSubmit","e","preventDefault","alert","console","log","userAuthOperations","className","css","type","pattern","title","onChange","required","variant","createAction"],"sourceRoot":""}