{"version":3,"file":"static/js/236.2fb9c9de.chunk.js","mappings":"wPAKMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAILC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACDC,EAAQO,GACR,MACJ,IAAK,QACDL,EAASK,GACT,MACJ,IAAK,WACDH,EAAYG,GACZ,MACJ,QACI,OAEP,EAUKC,EAAQ,WACZR,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAED,OACE,0BACE,kBAAOK,MAAOvB,EAAOC,KAArB,WACE,mBAAOsB,MAAOvB,EAAOG,MAArB,sBAEE,kBACEqB,KAAK,OACLX,KAAK,OACLY,QAAQ,yHACRC,MAAM,yIACNL,MAAOR,EACPc,SAAUR,EACVS,UAAQ,QAEZ,mBAAOL,MAAOvB,EAAOG,MAArB,mBAEE,kBACEqB,KAAK,QACLX,KAAK,QACLY,QAAQ,0CACRJ,MAAON,EACPY,SAAUR,EACVS,UAAQ,QAGZ,mBAAOL,MAAOvB,EAAOG,MAArB,sBAEE,kBACEqB,KAAK,WACLX,KAAK,WACLQ,MAAOJ,EACPU,SAAUR,EACVS,UAAQ,QAGZ,mBAAQJ,KAAK,SAASK,QAjDP,SAAAC,GACnBA,EAAEC,iBACFC,QAAQC,IAAI,CAAEpB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IAC3BT,EAAS0B,EAAAA,GAAAA,SAA4B,CAAErB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACpDK,IACAZ,EAAS,YACV,EA2CK,0BAIP,EClFD,EAPiB,WAEf,OACE,SAACH,EAAD,GAEH,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport userAuthOperations from 'redux/Auth/operations';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n          setName(value);\n          break;\n      case 'email':\n          setEmail(value);\n          break;\n      case 'password':\n          setPassword(value);\n          break;\n      default:\n          return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log({ name, email, password });\n    dispatch(userAuthOperations.register({ name, email, password }));\n    reset();\n    navigate('/contacts')\n  }\n  \n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  \n  return (\n    <div>\n      <form  style={styles.form}>\n        <label style={styles.label}>\n          Username\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n            onChange={handleChange}\n            required/>\n        </label>\n        <label style={styles.label}>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\" \n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n            value={email}\n            onChange={handleChange}\n            required\n            />\n        </label>\n        <label style={styles.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\" \n            value={password}\n            onChange={handleChange}\n            required\n            />\n        </label>\n        <button type=\"submit\" onClick={handleSubmit}>Register</button>\n        </form>\n    </div>\n  )\n}\n","import React from 'react'\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n\n  return (\n    <RegisterForm />\n  )\n}\n\nexport default Register;"],"names":["styles","form","width","label","display","flexDirection","marginBottom","RegisterForm","dispatch","useDispatch","navigate","useNavigate","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","reset","style","type","pattern","title","onChange","required","onClick","e","preventDefault","console","log","userAuthOperations"],"sourceRoot":""}